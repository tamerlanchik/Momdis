function y=Uku_Set_n_3J;
% Классическое бескоалиционное УКУ-равновесие (на основе индивидуальных контругроз)
load data_field; Data0=[]; Data1=[]; Data2=[]; Data3=[];
qw=0; S=size(DataM.J); qw_=zeros(1,S(4)); qj=[size(DataM.Q,4),size(DataM.J,4)];
tic;
for q1=1:S(1);
 for q2=1:S(2);
  for q3=1:S(3);
     J_=DataM.J(q1,q2,q3,:);
     fl1=0;
     for i=1:S(1);
        if (DataM.J(i,q2,q3,1)<J_(1));
           fl1=fl1+1;
           for j=1:S(2);
              if (DataM.J(i,j,q3,1)>=J_(1))&(DataM.J(i,j,q3,2)<DataM.J(i,q2,q3,2));
                  fl1=fl1-1; break;
              end;
           end;
           if fl1~=0;
             fl1=1;
             for k=1:S(3);
                if (DataM.J(i,q2,k,1)>=J_(1))&(DataM.J(i,q2,k,3)<DataM.J(i,q2,q3,3));
                    fl1=fl1-1; break;
                end;
             end;
           end;  
        end;
        if fl1~=0; break; end;
     end;
     fl2=0;
     for j=1:S(2);
        if DataM.J(q1,j,q3,2)<J_(2);
           fl2=fl2+1;
           for i=1:S(1);
              if (DataM.J(i,j,q3,2)>=J_(2))&(DataM.J(i,j,q3,1)<DataM.J(q1,j,q3,1));
                  fl2=fl2-1; break;
              end;
           end;
           if fl2~=0;
             fl2=1;
             for k=1:S(3);
                if (DataM.J(q1,j,k,2)>=J_(2))&(DataM.J(q1,j,k,3)<DataM.J(q1,j,q3,3));
                    fl2=fl2-1; break;
                end;
             end;
           end;
        end;
        if fl2~=0; break; end;
     end;
     fl3=0;
     for k=1:S(3);
        if (DataM.J(q1,q2,k,3)<J_(3));
           fl3=fl3+1;
           for i=1:S(1);
              if (DataM.J(i,q2,k,3)>=J_(3))&(DataM.J(i,q2,k,1)<DataM.J(q1,q2,k,1));
                  fl3=fl3-1; break;
              end;
           end;
           if fl3~=0;
             fl3=1;
             for j=1:S(2);
                if (DataM.J(q1,j,k,3)>=J_(3))&(DataM.J(q1,j,k,2)<DataM.J(q1,q2,k,2));
                    fl3=fl3-1; break;
                end;
             end;
           end;
        end;
        if fl3~=0; break; end;
     end;
     if (fl1==0);
       qw_(1)=qw_(1)+1;
       Qt=[]; for l=1:qj(1); Qt=[Qt, DataM.Q(q1,q2,q3,l)]; end;  Data1.Q(qw_(1),:)=Qt;
       Jt=[]; for l=1:qj(2); Jt=[Jt, DataM.J(q1,q2,q3,l)]; end;  Data1.J(qw_(1),:)=Jt;
     end;
     if (fl2==0);
       qw_(2)=qw_(2)+1;
       Qt=[]; for l=1:qj(1); Qt=[Qt, DataM.Q(q1,q2,q3,l)]; end;  Data2.Q(qw_(2),:)=Qt;
       Jt=[]; for l=1:qj(2); Jt=[Jt, DataM.J(q1,q2,q3,l)]; end;  Data2.J(qw_(2),:)=Jt;
     end;
     if (fl3==0);
       qw_(3)=qw_(3)+1;
       Qt=[]; for l=1:qj(1); Qt=[Qt, DataM.Q(q1,q2,q3,l)]; end;  Data3.Q(qw_(3),:)=Qt;
       Jt=[]; for l=1:qj(2); Jt=[Jt, DataM.J(q1,q2,q3,l)]; end;  Data3.J(qw_(3),:)=Jt;
     end;
     if (fl1==0)&(fl2==0)&(fl3==0);
       qw=qw+1;
       Qt=[]; for l=1:qj(1); Qt=[Qt, DataM.Q(q1,q2,q3,l)]; end;  Data0.Q(qw,:)=Qt;
       Jt=[]; for l=1:qj(2); Jt=[Jt, DataM.J(q1,q2,q3,l)]; end;  Data0.J(qw,:)=Jt;
     end;
  end;
 end;
end;
Data0.Time=toc; 
save data_uku_n Data0 Data1 Data2 Data3;
